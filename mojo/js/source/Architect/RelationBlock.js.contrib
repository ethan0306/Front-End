(function(){
    mstrmojo.requiresCls(
    		"mstrmojo.Editor",
    		"mstrmojo.Label", 
    		"mstrmojo._TouchGestures"
    		);
    
    function setPosition(w, vl, vt){
    	var st = w.editorNode.style;
    	
    	st.left = vl;
        w.set('left',vl);
        w.left=vl;
        st.top = vt; 
        w.set('top',vt);
        w.top=vt;	
    }
    
    /**
	 * <p>
	 * Widget that represents a DB Table
	 * </p>
	 * 
	 * @class
	 * @extends mstrmojo.Editor
	 */
    mstrmojo.RelationBlock = mstrmojo.declare(
    		// superclass
    		mstrmojo.Editor,
    		
    		// mixins
    		[ mstrmojo._TouchGestures ],
    		
    		{
    			/**
				 * @Class name
				 */
    			scriptClass: "mstrmojo.RelationBlock",
    			title: '',
    			
    	        left: '',    	        
	   	        top: '',
	   	        
	 	        cssText : "width: 100px;height:50px;border:solid 1px gray; background-color:#ff0000",
	   	        modal:false,
	   	        
	   	        markupString: 	'<div id="{@id}" class="mstrmojo-Editor-wrapper">' +
					'<div class="mstrmojo-Editor {@cssClass}" style="z-index:{@zIndex};{@cssText}" mstrAttach:mousedown>{@titlebarHTML}' + 
					'<div class="mstrmojo-Editor-content" style="height:100px; overflow-x:hidden; overflow-y:auto"></div>' +
					'</div>' +
				'</div>',

				// this markup hacks the editor definition and removes the help
				// and close button
				titleMarkupString: 	'<div style="position:absolute;width:100%;background-color:LightSteelBlue;border-top-left-radius: 5px;border-top-right-radius: 5px">' +
									'<table cellspacing="0" cellpadding="0" class="mstrmojo-Editor-titlebar">' +
										'<tr>' +
											'<td class="mstrmojo-Editor-titleCell">' +
												'<div class="mstrmojo-Editor-title">' +
												'</div>' +
											'</td>' +
											'<td>' +
												'<a><img></img></a>' +
											'</td>' +
											'<td>' +
											'</td>' +
										'</tr>' +
									'</table>' +
								'</div>' +
								'<div class="mstrmojo-Editor-titleSpacer"></div>',
								   
				children:[{
					scriptClass: "mstrmojo.Table",
					cssText: "width: 200px; background-color:white; border: 1px solid #C6C6C6; height:10px",
				}],
		 		   				   
		 		
		 		markupSlots: {
	                 editorNode: function(){ return this.domNode.firstChild;},
	                 titleNode: function(){ return this.showTitle ? this.domNode.firstChild.firstChild.firstChild.rows[0].cells[0].firstChild : null;},                
	                 helpNode: function(){ return this.showTitle ? this.domNode.firstChild.firstChild.firstChild.rows[0].cells[1].firstChild : null;},
	                 closeNode: function(){ return this.showTitle ? this.domNode.firstChild.firstChild.firstChild.rows[0].cells[2].firstChild : null;},
	                 containerNode: function(){ return this.domNode.firstChild.childNodes[2]; },
	                 buttonNode: function() { return this.domNode.firstChild.childNodes[3]; },
	                 curtainNode: function(){return this.domNode.lastChild;},
	                 touchNode : function() { return this.showTitle ? this.domNode.firstChild.firstChild.firstChild : null; },
	                 
	             },
	             
		 		/**
				 * Override dragging
				 */
		 		ondragmove : function(c){ 
                	var e = c.tgt.pos,
				        s = c.src.pos,
				        dx = e.x - s.x,
				        dy = e.y - s.y,
				        vl = this.leftPos + dx + 'px',
				        vt = this.topPos + dy + 'px';
                	
                	setPosition(this,vl,vt);
    			},

    			/**
				 * @ignore
				 */
                onmouseover: function(evt) {
    				if(!this.isAndroid) {
    					handleTouchBegin(this, evt.e.pageX, evt.e.pageY);
    				}
                },
                
                touchBegin: function touchBegin(touch) {
          			var s = this.editorNode.style;
          			this._tl = parseInt(s.left);
          			this._tt = parseInt(s.top);
    			},
    			
    			touchSwipeMove: function touchSwipeBegin(touch) {
    				setPosition(this, touch.delta.x + this._tl + "px", touch.delta.y + this._tt + "px");
    			}
    		}	
 	    );
})();